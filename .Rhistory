setwd('..')
source('scripts/read.scottish.capital.R')
load('data/scottish.capital.rda')
sapply(scottish.capital,is.directed)
directors <- unlist(sapply(scottish.capital,
function(g) V(g)$name[!V(g)$type]))
length(unique(directors))
# Vector of company names
companies <- unlist(sapply(scottish.capital,
function(g) V(g)$name[V(g)$type]))
length(unique(companies))
# Convert " and " to " & "
companies <- gsub(' and ', ' & ', companies)
length(unique(companies))
# Convert all "William" company names to "Wm"
companies <- gsub('William', 'Wm', companies)
length(unique(companies))
# Changed names
wh.rep <- grep('\\(formerly', companies)
name.dat <- unique(data.frame(
old = I(gsub('^.* \\(formerly (.*)\\)$', '\\1', companies[wh.rep])),
new = I(gsub('^(.*) \\(formerly .*\\)$', '\\1', companies[wh.rep]))
))
# Where else do the original names appear?
wh.old <- lapply(1:nrow(name.dat), function(i) {
setdiff(grep(name.dat$old[i], companies), wh.rep)
})
# Where else do the changed names appear?
wh.new <- lapply(1:nrow(name.dat), function(i) {
grep(name.dat$new[i], companies)
})
# Replace all instances with changed names
for(i in 1:nrow(name.dat)) {
companies[union(wh.old[[i]], wh.new[[i]])] <- name.dat$new[i]
}
length(unique(companies))
# Combine companies that begin the same way
uniq.companies <- unique(companies)
wh.prefix <- lapply(1:length(uniq.companies), function(i) {
grep(paste0('^', uniq.companies[i]), uniq.companies)
})
wh.prefix <- wh.prefix[which(sapply(wh.prefix, length) > 1)]
prefix.companies <- lapply(wh.prefix, function(vec) uniq.companies[vec])
prefix.tab <- lapply(prefix.companies, function(vec) {
table(companies[which(companies %in% vec)])
})
for(i in 1:length(prefix.tab)) {
name <- names(prefix.tab[[i]])[which(prefix.tab[[i]] ==
max(prefix.tab[[i]]))[1]]
companies[which(companies %in% names(prefix.tab[[i]]))] <- name
}
length(unique(companies))
# Rename event nodes
i <- 1
for(j in 1:length(scottish.capital)) {
wh.event <- which(V(scottish.capital[[j]])$type)
V(scottish.capital[[j]])$name[wh.event] <-
companies[i:(i + length(wh.event) - 1)]
i <- i + length(wh.event)
}
# Vector of director names
directors <- unlist(sapply(scottish.capital,
function(g) V(g)$name[!V(g)$type]))
length(unique(directors))
directors <- gsub(' & ', ' and ', directors)
length(unique(directors))
unique(directors)[order(unique(directors))]
uniq.directors <- unique(directors)
wh.prefix <- lapply(1:length(uniq.directors), function(i) {
grep(paste0('^', uniq.directors[i]), uniq.directors)
})
wh.prefix <- wh.prefix[which(sapply(wh.prefix, length) > 1)]
prefix.directors <- lapply(wh.prefix, function(vec) uniq.directors[vec])
prefix.tab <- lapply(prefix.directors, function(vec) {
table(directors[which(directors %in% vec)])
})
prefix.tab
prefix.directors
wh.prefix
directors[c(410,446)]
uniq.directors[c(410,446)]
grep('^Wm McE. Younger', uniq.directors)
grep('^W. McE. Younger', uniq.directors)
uniq.directors <- unique(directors)
wh.prefix <- lapply(1:length(uniq.directors), function(i) {
grep(paste0('^', uniq.directors[i]), uniq.directors)
})
wh.prefix <- wh.prefix[which(sapply(wh.prefix, length) > 1)]
prefix.directors <- lapply(wh.prefix, function(vec) uniq.directors[vec])
prefix.tab <- lapply(prefix.directors, function(vec) {
table(directors[which(directors %in% vec)])
})
prefix.tab
library(igraph)
load('data/scottish.capital.rda')
source('scripts/read.scottish.capital.R')
library(igraph)
load('data/scottish.capital.rda')
# Data clean-up
# Vector of company names
companies <- unlist(sapply(scottish.capital,
function(g) V(g)$name[V(g)$type]))
length(unique(companies))
# Convert " and " to " & "
companies <- gsub(' and ', ' & ', companies)
length(unique(companies))
# Convert all "William" company names to "Wm"
companies <- gsub('William', 'Wm', companies)
length(unique(companies))
# Changed names
wh.rep <- grep('\\(formerly', companies)
name.dat <- unique(data.frame(
old = I(gsub('^.* \\(formerly (.*)\\)$', '\\1', companies[wh.rep])),
new = I(gsub('^(.*) \\(formerly .*\\)$', '\\1', companies[wh.rep]))
))
# Where else do the original names appear?
wh.old <- lapply(1:nrow(name.dat), function(i) {
setdiff(grep(name.dat$old[i], companies), wh.rep)
})
# Where else do the changed names appear?
wh.new <- lapply(1:nrow(name.dat), function(i) {
grep(name.dat$new[i], companies)
})
# Replace all instances with changed names
for(i in 1:nrow(name.dat)) {
companies[union(wh.old[[i]], wh.new[[i]])] <- name.dat$new[i]
}
length(unique(companies))
# Combine companies that begin the same way
uniq.companies <- unique(companies)
wh.prefix <- lapply(1:length(uniq.companies), function(i) {
grep(paste0('^', uniq.companies[i]), uniq.companies)
})
wh.prefix <- wh.prefix[which(sapply(wh.prefix, length) > 1)]
prefix.companies <- lapply(wh.prefix, function(vec) uniq.companies[vec])
prefix.tab <- lapply(prefix.companies, function(vec) {
table(companies[which(companies %in% vec)])
})
for(i in 1:length(prefix.tab)) {
name <- names(prefix.tab[[i]])[which(prefix.tab[[i]] ==
max(prefix.tab[[i]]))[1]]
companies[which(companies %in% names(prefix.tab[[i]]))] <- name
}
length(unique(companies))
# Rename event nodes
i <- 1
for(j in 1:length(scottish.capital)) {
wh.event <- which(V(scottish.capital[[j]])$type)
V(scottish.capital[[j]])$name[wh.event] <-
companies[i:(i + length(wh.event) - 1)]
i <- i + length(wh.event)
}
# Vector of director names
directors <- unlist(sapply(scottish.capital,
function(g) V(g)$name[!V(g)$type]))
length(unique(directors))
# Convert " & " to " and "
directors <- gsub(' & ', ' and ', directors)
length(unique(directors))
# Combine directors that begin the same way (BEWARE OF REG EXPR CHARACTERS)
uniq.directors <- unique(directors)
wh.prefix <- lapply(1:length(uniq.directors), function(i) {
grep(paste0('^', uniq.directors[i]), uniq.directors)
})
wh.prefix <- wh.prefix[which(sapply(wh.prefix, length) > 1)]
prefix.directors <- lapply(wh.prefix, function(vec) uniq.directors[vec])
prefix.tab <- lapply(prefix.directors, function(vec) {
table(directors[which(directors %in% vec)])
})
for(i in 1:length(prefix.tab)) {
name <- names(prefix.tab[[i]])[which(prefix.tab[[i]] ==
max(prefix.tab[[i]]))[1]]
directors[which(directors %in% names(prefix.tab[[i]]))] <- name
}
length(unique(directors))
prefix.tab
# Combine nodes with same name
for(i in 1:length(scottish.capital)) {
scottish.capital[[i]] <- contract.vertices(
scottish.capital[[i]],
factor(V(scottish.capital[[i]])$name),
'first'
)
}
sapply(scottish.capital,function(g) c(length(which(V(g)$type==0)),length(which(V(g)$type==1))))
